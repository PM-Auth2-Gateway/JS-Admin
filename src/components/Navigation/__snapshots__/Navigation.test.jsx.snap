// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation component should be rendered 1`] = `
<Navbar
  className="border"
  collapseOnSelect={true}
  expand="md"
  variant="light"
>
  <NavLink
    to="/"
  >
    <NavbarBrand>
      <Image
        alt="icon"
        className="mr-2 align-center align-top"
        fluid={false}
        height="30"
        rounded={true}
        roundedCircle={false}
        src="/favicon.ico"
        thumbnail={false}
        width="30"
      />
    </NavbarBrand>
  </NavLink>
  <NavbarToggle
    aria-controls="responsive-navbar-nav"
    label="Toggle navigation"
  />
  <NavbarCollapse
    id="responsive-navbar-nav"
  >
    <Nav
      className="mr-auto"
      fill={false}
      justify={false}
    >
      <NavLink
        activeClassName="text-primary"
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "activeClassName": [Function],
              "activeStyle": [Function],
              "aria-current": [Function],
              "className": [Function],
              "exact": [Function],
              "innerRef": [Function],
              "isActive": [Function],
              "location": [Function],
              "onClick": [Function],
              "replace": [Function],
              "sensitive": [Function],
              "strict": [Function],
              "style": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        to="/applications"
      >
        Applications
      </NavLink>
      <NavLink
        activeClassName="text-primary"
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "activeClassName": [Function],
              "activeStyle": [Function],
              "aria-current": [Function],
              "className": [Function],
              "exact": [Function],
              "innerRef": [Function],
              "isActive": [Function],
              "location": [Function],
              "onClick": [Function],
              "replace": [Function],
              "sensitive": [Function],
              "strict": [Function],
              "style": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        to="/guide"
      >
        Guide
      </NavLink>
      <NavLink
        activeClassName="text-primary"
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "activeClassName": [Function],
              "activeStyle": [Function],
              "aria-current": [Function],
              "className": [Function],
              "exact": [Function],
              "innerRef": [Function],
              "isActive": [Function],
              "location": [Function],
              "onClick": [Function],
              "replace": [Function],
              "sensitive": [Function],
              "strict": [Function],
              "style": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        to="/docs"
      >
        Docs
      </NavLink>
    </Nav>
    <Dropdown
      className="mr-5"
      navbar={false}
    >
      <DropdownToggle
        variant="light"
      >
        <Image
          alt="test"
          className="mr-2"
          fluid={false}
          h="30"
          rounded={false}
          roundedCircle={true}
          src="test"
          thumbnail={false}
          width="30"
        />
        test
      </DropdownToggle>
      <DropdownMenu
        align="left"
        alignRight={false}
        className="dropdown dropdown-menu-right"
        flip={true}
      >
        <DropdownItem
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          disabled={false}
        >
          Log out
        </DropdownItem>
      </DropdownMenu>
    </Dropdown>
  </NavbarCollapse>
</Navbar>
`;

exports[`Navigation component should render user data 1`] = `
<Navbar
  className="border"
  collapseOnSelect={true}
  expand="md"
  variant="light"
>
  <NavLink
    to="/"
  >
    <NavbarBrand>
      <Image
        alt="icon"
        className="mr-2 align-center align-top"
        fluid={false}
        height="30"
        rounded={true}
        roundedCircle={false}
        src="/favicon.ico"
        thumbnail={false}
        width="30"
      />
    </NavbarBrand>
  </NavLink>
  <NavbarToggle
    aria-controls="responsive-navbar-nav"
    label="Toggle navigation"
  />
  <NavbarCollapse
    id="responsive-navbar-nav"
  >
    <Nav
      className="mr-auto"
      fill={false}
      justify={false}
    >
      <NavLink
        activeClassName="text-primary"
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "activeClassName": [Function],
              "activeStyle": [Function],
              "aria-current": [Function],
              "className": [Function],
              "exact": [Function],
              "innerRef": [Function],
              "isActive": [Function],
              "location": [Function],
              "onClick": [Function],
              "replace": [Function],
              "sensitive": [Function],
              "strict": [Function],
              "style": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        to="/applications"
      >
        Applications
      </NavLink>
      <NavLink
        activeClassName="text-primary"
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "activeClassName": [Function],
              "activeStyle": [Function],
              "aria-current": [Function],
              "className": [Function],
              "exact": [Function],
              "innerRef": [Function],
              "isActive": [Function],
              "location": [Function],
              "onClick": [Function],
              "replace": [Function],
              "sensitive": [Function],
              "strict": [Function],
              "style": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        to="/guide"
      >
        Guide
      </NavLink>
      <NavLink
        activeClassName="text-primary"
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "activeClassName": [Function],
              "activeStyle": [Function],
              "aria-current": [Function],
              "className": [Function],
              "exact": [Function],
              "innerRef": [Function],
              "isActive": [Function],
              "location": [Function],
              "onClick": [Function],
              "replace": [Function],
              "sensitive": [Function],
              "strict": [Function],
              "style": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        to="/docs"
      >
        Docs
      </NavLink>
    </Nav>
    <Dropdown
      className="mr-5"
      navbar={false}
    >
      <DropdownToggle
        variant="light"
      >
        <Image
          alt="test"
          className="mr-2"
          fluid={false}
          h="30"
          rounded={false}
          roundedCircle={true}
          src="test"
          thumbnail={false}
          width="30"
        />
        test
      </DropdownToggle>
      <DropdownMenu
        align="left"
        alignRight={false}
        className="dropdown dropdown-menu-right"
        flip={true}
      >
        <DropdownItem
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          disabled={false}
        >
          Log out
        </DropdownItem>
      </DropdownMenu>
    </Dropdown>
  </NavbarCollapse>
</Navbar>
`;
